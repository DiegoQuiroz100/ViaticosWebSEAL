//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViaticosWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ViaticosEntities4 : DbContext
    {
        public ViaticosEntities4()
            : base("name=ViaticosEntities4")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VehAutWeb> VehAutWeb { get; set; }
        public virtual DbSet<VehCab> VehCab { get; set; }
        public virtual DbSet<VehCabAnt> VehCabAnt { get; set; }
        public virtual DbSet<VehDet> VehDet { get; set; }
        public virtual DbSet<VehDetant> VehDetant { get; set; }
        public virtual DbSet<VehDetNew> VehDetNew { get; set; }
        public virtual DbSet<VehFacturacion> VehFacturacion { get; set; }
        public virtual DbSet<VehMae> VehMae { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Veh_Facturado(Nullable<int> usuCrea, Nullable<int> codgrifo, Nullable<System.DateTime> fecFac, string nroDoc, Nullable<int> nroSol, Nullable<decimal> monto, Nullable<decimal> iGV, Nullable<decimal> total, string rUC, string periodo)
        {
            var usuCreaParameter = usuCrea.HasValue ?
                new ObjectParameter("UsuCrea", usuCrea) :
                new ObjectParameter("UsuCrea", typeof(int));
    
            var codgrifoParameter = codgrifo.HasValue ?
                new ObjectParameter("codgrifo", codgrifo) :
                new ObjectParameter("codgrifo", typeof(int));
    
            var fecFacParameter = fecFac.HasValue ?
                new ObjectParameter("FecFac", fecFac) :
                new ObjectParameter("FecFac", typeof(System.DateTime));
    
            var nroDocParameter = nroDoc != null ?
                new ObjectParameter("NroDoc", nroDoc) :
                new ObjectParameter("NroDoc", typeof(string));
    
            var nroSolParameter = nroSol.HasValue ?
                new ObjectParameter("NroSol", nroSol) :
                new ObjectParameter("NroSol", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var iGVParameter = iGV.HasValue ?
                new ObjectParameter("IGV", iGV) :
                new ObjectParameter("IGV", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Veh_Facturado", usuCreaParameter, codgrifoParameter, fecFacParameter, nroDocParameter, nroSolParameter, montoParameter, iGVParameter, totalParameter, rUCParameter, periodoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Veh_SolCab(string tipo, Nullable<int> codveh, Nullable<decimal> kmant, Nullable<decimal> kmact, Nullable<decimal> km, Nullable<int> tipman, string observaciones, Nullable<int> codgrifo, Nullable<int> usureg, string gercod, string arecod, string anno, Nullable<int> tipcomb)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var codvehParameter = codveh.HasValue ?
                new ObjectParameter("codveh", codveh) :
                new ObjectParameter("codveh", typeof(int));
    
            var kmantParameter = kmant.HasValue ?
                new ObjectParameter("kmant", kmant) :
                new ObjectParameter("kmant", typeof(decimal));
    
            var kmactParameter = kmact.HasValue ?
                new ObjectParameter("kmact", kmact) :
                new ObjectParameter("kmact", typeof(decimal));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("km", km) :
                new ObjectParameter("km", typeof(decimal));
    
            var tipmanParameter = tipman.HasValue ?
                new ObjectParameter("tipman", tipman) :
                new ObjectParameter("tipman", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var codgrifoParameter = codgrifo.HasValue ?
                new ObjectParameter("codgrifo", codgrifo) :
                new ObjectParameter("codgrifo", typeof(int));
    
            var usuregParameter = usureg.HasValue ?
                new ObjectParameter("usureg", usureg) :
                new ObjectParameter("usureg", typeof(int));
    
            var gercodParameter = gercod != null ?
                new ObjectParameter("gercod", gercod) :
                new ObjectParameter("gercod", typeof(string));
    
            var arecodParameter = arecod != null ?
                new ObjectParameter("arecod", arecod) :
                new ObjectParameter("arecod", typeof(string));
    
            var annoParameter = anno != null ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(string));
    
            var tipcombParameter = tipcomb.HasValue ?
                new ObjectParameter("tipcomb", tipcomb) :
                new ObjectParameter("tipcomb", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Veh_SolCab", tipoParameter, codvehParameter, kmantParameter, kmactParameter, kmParameter, tipmanParameter, observacionesParameter, codgrifoParameter, usuregParameter, gercodParameter, arecodParameter, annoParameter, tipcombParameter);
        }
    
        public virtual int Veh_SolCab2(string tipo, Nullable<int> solcod, Nullable<int> codveh, Nullable<decimal> kmant, Nullable<decimal> kmact, Nullable<decimal> km, Nullable<int> tipman, string observaciones, Nullable<int> codgrifo, Nullable<int> usureg, Nullable<System.DateTime> fecreg, string gercod, string arecod, string anno, Nullable<int> tipcomb)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var solcodParameter = solcod.HasValue ?
                new ObjectParameter("solcod", solcod) :
                new ObjectParameter("solcod", typeof(int));
    
            var codvehParameter = codveh.HasValue ?
                new ObjectParameter("codveh", codveh) :
                new ObjectParameter("codveh", typeof(int));
    
            var kmantParameter = kmant.HasValue ?
                new ObjectParameter("kmant", kmant) :
                new ObjectParameter("kmant", typeof(decimal));
    
            var kmactParameter = kmact.HasValue ?
                new ObjectParameter("kmact", kmact) :
                new ObjectParameter("kmact", typeof(decimal));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("km", km) :
                new ObjectParameter("km", typeof(decimal));
    
            var tipmanParameter = tipman.HasValue ?
                new ObjectParameter("tipman", tipman) :
                new ObjectParameter("tipman", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var codgrifoParameter = codgrifo.HasValue ?
                new ObjectParameter("codgrifo", codgrifo) :
                new ObjectParameter("codgrifo", typeof(int));
    
            var usuregParameter = usureg.HasValue ?
                new ObjectParameter("usureg", usureg) :
                new ObjectParameter("usureg", typeof(int));
    
            var fecregParameter = fecreg.HasValue ?
                new ObjectParameter("fecreg", fecreg) :
                new ObjectParameter("fecreg", typeof(System.DateTime));
    
            var gercodParameter = gercod != null ?
                new ObjectParameter("gercod", gercod) :
                new ObjectParameter("gercod", typeof(string));
    
            var arecodParameter = arecod != null ?
                new ObjectParameter("arecod", arecod) :
                new ObjectParameter("arecod", typeof(string));
    
            var annoParameter = anno != null ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(string));
    
            var tipcombParameter = tipcomb.HasValue ?
                new ObjectParameter("tipcomb", tipcomb) :
                new ObjectParameter("tipcomb", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Veh_SolCab2", tipoParameter, solcodParameter, codvehParameter, kmantParameter, kmactParameter, kmParameter, tipmanParameter, observacionesParameter, codgrifoParameter, usuregParameter, fecregParameter, gercodParameter, arecodParameter, annoParameter, tipcombParameter);
        }
    }
}
